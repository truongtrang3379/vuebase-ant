{
  "getting-started": "Getting Started",
  "introduce": "Base Vue uses the {linkAnt} that is dedicated to providing a  {strong} for programmers. Make sure that you had installed  {linkNode}(>v8.9) correctly.",
  "good-development-experience": "good development experience",
  "ant-design-vue": "Ant Design Vue",
  "node-js": "Node.js",
  "blockquote": "Before diving into the basics of {linkVue} using {linkAnt}, a good knowledge of {linkVue} and {linkES2015} is required.",
  "vue": "Vue",
  "javascript-es2015": "JavaScript ES2015",
  "project-setup": "Project setup",
  "compiles-and-hot-reloads-for-development": "Compiles and hot-reloads for development",
  "compiles-and-minifies-for-production": "Compiles and minifies for production",
  "environment-support": "Environment Support",
  "styles": "Styles",
  "spacing": "Spacing",
  "introduce-spacing": " Update your layout without creating new classes. Spacing helpers are useful for modifying the padding and margin of an element.",
  "how-it-works": "How it works",
  "how-it-works-intoduce": "The helper classes apply {strongMargin} or {strongPadding} to an element ranging from 0 to 12.",
  "margin": "margin",
  "padding": "padding",
  "the-property-applies-the-type-of-spacing": "The {strongProperty} applies the type of spacing :",
  "property": "property",
  "applies": "applies",
  "the-direction-designates-the-side-the-property-applies-to": "The {strongDirection} designates the side the property applies to:",
  "direction": "direction",
  "applies-the-spacing-for-directionMargin-and-directionPadding-top": "applies the spacing for {directionMargin} and {directionPadding}",
  "applies-the-spacing-for-the-property-in-all-directions": "applies the spacing for the property in all directions",
  "size": "size",
  "eliminates-all-margin-or-padding-by-setting-it-to-0": "eliminates all {directionMargin} or {directionPadding} by setting it to 0",
  "sets-margin-or-padding-to-px": "sets {directionMargin} or {directionPadding} to {px}",
  "sets-the-spacing-to": "sets the spacing to",
  "applies-the-spacing-for-both-left-and-right": "applies the spacing for both {directionLeft} and {directionRigth}",
  "width-and-height": "Width and height",
  "width": "width",
  "height": "height",
  "extreme": "extreme",
  "the-property-applies-the-type-of-width-and-height": "The {strongProperty}  applies the type of width and height :",
  "the-size-controls-the-increment-of-the-property-in-size-intervals": "The {strongSize} controls the increment of the {strongProperty} in {size} intervals:",
  "examples": "Examples",
  "output": "output",
  "the-examples-applies-the-type-of-min-and-max": "The {strongExamples} applies the type of min and max :",
  "min": "min",
  "max": "max",
  "the-helper-classes-apply-width-or-height-to-an-element-ranging-from-0-to-10-or-1-to-12": "The helper classes apply {strongWidth} or {strongHeight} to an element ranging from 0 to 10 or 1 to 12.",
  "text": "Text",
  "introduce-text": "Control text alignment, overflow and more.",
  "text-alignment": "Text alignment",
  "introduce-text-alignment": "Alignment helper classes allow you to easily re-align text.",
  "aligned-text-on-all-viewport-sizes": "{align} aligned text on all viewport sizes. {code}",
  "text-overflow": "Text overflow",
  "the-helper-classes-apply-max-width-to-an-element-ranging-from-1-to-12": "The helper classes apply {strongMaxWidth} to an element ranging from 1 to 12.",
  "max-width": "max-width",
  "overflow": "overflow",
  "sets-max-width-to": "sets max-width to {px}",
  "font-size": "Font size",
  "font-size-code": "font-size",
  "sets-font-size-to": "sets font-size to {px}",
  "text-transform": "Text transform",
  "intoduce-text-transformed": "Text can be transformed with text capitalization classes.",
  "float": "Float",
  "introduce-float": "Applies a custom float across any breakpoint with responsive float utilities.",
  "classes": "Classes",
  "introduce-classes": "Easily toggle a float with a class:",
  "spacer": "Spacer",
  "components": "Components",
  "introduce-spacer": "The {code} component is useful when you want to fill available space or make space between two components.",
  "remember-me": "Remember me",
  "forgot-password": "Forgot password",
  "log-in": "Log in",
  "facebook": "Facebook",
  "google": "Google",
  "twitter": "Twitter"
}
